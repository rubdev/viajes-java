/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gestionviajes;

import java.awt.Color;
import java.awt.Frame;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;

/**
 *
 * @author rubensegura
 */
public class NuevaVenta extends javax.swing.JDialog {
    
    //Variables propias
    private BuscarClientePaquete ventanaBusqueda = new BuscarClientePaquete((Frame)getParent(), rootPaneCheckingEnabled);
    private BaseDeDatos con;
    private Ventas ventanaVentas;
    private Border bordeDEF;
    
    /**
     * Creates new form NuevaVenta
     */
    public NuevaVenta(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setSize(700,520);
        this.bordeDEF = idClienteVenta.getBorder();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelNVenta = new javax.swing.JLabel();
        idVenta = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        labelCliente = new javax.swing.JLabel();
        textoCliente = new javax.swing.JTextField();
        btnBuscarCliente = new javax.swing.JButton();
        idClienteVenta = new javax.swing.JTextField();
        labelPaquete = new javax.swing.JLabel();
        textoPaquete = new javax.swing.JTextField();
        btnBuscarPaquete = new javax.swing.JButton();
        idPaqueteVenta = new javax.swing.JTextField();
        labelFechaInicio = new javax.swing.JLabel();
        seleccionFechaInicio = new com.toedter.calendar.JDateChooser();
        labelFechaIFin = new javax.swing.JLabel();
        seleccionFechaFin = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Nueva venta");

        labelNVenta.setFont(new java.awt.Font("Helvetica Neue", 1, 48)); // NOI18N
        labelNVenta.setText("Nueva venta");
        labelNVenta.setToolTipText("Nueva venta");
        labelNVenta.setPreferredSize(new java.awt.Dimension(750, 500));

        idVenta.setToolTipText("");
        idVenta.setEnabled(false);
        idVenta.setFocusable(false);
        idVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idVentaActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setToolTipText("Cancelar y volver a gestión de ventas");
        btnCancelar.setPreferredSize(new java.awt.Dimension(170, 80));
        btnCancelar.setSelected(true);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnModificar.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setToolTipText("Modificar venta");
        btnModificar.setPreferredSize(new java.awt.Dimension(170, 80));
        btnModificar.setSelected(true);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnGuardar.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.setToolTipText("Guardar nueva venta");
        btnGuardar.setPreferredSize(new java.awt.Dimension(170, 80));
        btnGuardar.setSelected(true);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        labelCliente.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        labelCliente.setText("Cliente:");
        labelCliente.setToolTipText("Nombre del cliente al que se asocia la venta");

        textoCliente.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        textoCliente.setText("Selecciona un cliente...");
        textoCliente.setToolTipText("Pulsa en buscar para seleccionar un cliente para la venta");
        textoCliente.setFocusable(false);
        textoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoClienteActionPerformed(evt);
            }
        });

        btnBuscarCliente.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        btnBuscarCliente.setText("Buscar");
        btnBuscarCliente.setToolTipText("Pulsa aquí para abrir la ventana de búsqueda de cliente");
        btnBuscarCliente.setNextFocusableComponent(btnBuscarPaquete);
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        idClienteVenta.setToolTipText("");
        idClienteVenta.setEnabled(false);
        idClienteVenta.setFocusable(false);
        idClienteVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idClienteVentaActionPerformed(evt);
            }
        });

        labelPaquete.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        labelPaquete.setText("Paquete:");
        labelPaquete.setToolTipText("Paquete al que se asocia la venta");

        textoPaquete.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        textoPaquete.setText("Selecciona un paquete...");
        textoPaquete.setToolTipText("Pulsa en buscar para seleccionar un paquete para la venta");
        textoPaquete.setFocusable(false);
        textoPaquete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoPaqueteActionPerformed(evt);
            }
        });

        btnBuscarPaquete.setFont(new java.awt.Font("Helvetica Neue", 0, 13)); // NOI18N
        btnBuscarPaquete.setText("Buscar");
        btnBuscarPaquete.setToolTipText("Pulsa aquí para abrir la ventana de búsqueda de paquetes");
        btnBuscarPaquete.setNextFocusableComponent(btnGuardar);
        btnBuscarPaquete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPaqueteActionPerformed(evt);
            }
        });

        idPaqueteVenta.setToolTipText("");
        idPaqueteVenta.setEnabled(false);
        idPaqueteVenta.setFocusable(false);
        idPaqueteVenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idPaqueteVentaActionPerformed(evt);
            }
        });

        labelFechaInicio.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        labelFechaInicio.setText("Fecha inicio:");
        labelFechaInicio.setToolTipText("Fecha de inicio del viaje");

        seleccionFechaInicio.setToolTipText("Pulsa en el calendario para seleccionar la fecha de inicio");

        labelFechaIFin.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        labelFechaIFin.setText("Fecha fin:");
        labelFechaIFin.setToolTipText("Fecha de fin del viaje");

        seleccionFechaFin.setToolTipText("Pulsa en el calendario para selecciona la fecha de fin");
        seleccionFechaFin.setNextFocusableComponent(btnGuardar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(idVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(31, 31, 31)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(30, 30, 30)
                            .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelFechaInicio)
                                    .addComponent(labelPaquete))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(textoPaquete, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnBuscarPaquete, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(idPaqueteVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(seleccionFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(labelFechaIFin)
                                .addGap(61, 61, 61)
                                .addComponent(seleccionFechaFin, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(106, 106, 106))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(labelNVenta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelCliente)
                                .addGap(86, 86, 86)
                                .addComponent(textoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(idClienteVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(labelNVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelCliente)
                    .addComponent(textoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idClienteVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelPaquete)
                    .addComponent(textoPaquete, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscarPaquete, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idPaqueteVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelFechaInicio)
                    .addComponent(seleccionFechaInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelFechaIFin)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(seleccionFechaFin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void idVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idVentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idVentaActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        System.out.println("Cancelar pulsado, se sale a gestión de ventas");
        this.setVisible(false);
        ventanaVentas.desactivarBotones();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        System.out.println("Modificar ventas pulsado");
        boolean todoCorrecto = true;
        String fechaActual="",fechaInicio="",fechaFin="";
        int idCliente=0,idPaquete=0;
        // compruebo cliente
        if (idClienteVenta.getText().equals("")) {
            this.setVisible(false);
            textoCliente.setBorder(new LineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "No has seleccionado ningún cliente","Error", JOptionPane.WARNING_MESSAGE);
            todoCorrecto = false;
        } else {
            idCliente = Integer.parseInt(idClienteVenta.getText());
            textoCliente.setBorder(new LineBorder(Color.GREEN));
        }
        // conpruebo paquete
        if (idPaqueteVenta.getText().equals("")) {
            this.setVisible(false);
            textoPaquete.setBorder(new LineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "No has seleccionado ningún paquete","Error", JOptionPane.WARNING_MESSAGE);
            todoCorrecto = false;
        } else {
            idPaquete = Integer.parseInt(idPaqueteVenta.getText());
            textoPaquete.setBorder(new LineBorder(Color.GREEN));
        }
        // compruebo fecha inicio
        try {
            SimpleDateFormat formatoFecha = new SimpleDateFormat("dd-MM-yyyy");
            Date fechaIni = seleccionFechaInicio.getDate(); //Cojo fecha del calendario
            fechaInicio = formatoFecha.format(fechaIni);
        } catch(Exception e) {
            this.setVisible(false);
            JOptionPane.showMessageDialog(null, "No puedes dejar la fecha de inicio sin seleccionar","Error", JOptionPane.WARNING_MESSAGE);
            todoCorrecto = false;
        }
        // compruebo fecha fin
        try {
            SimpleDateFormat formatoFecha = new SimpleDateFormat("dd-MM-yyyy");
            Date fechaF = seleccionFechaFin.getDate(); //Cojo fecha del calendario
            fechaFin = formatoFecha.format(fechaF);
        } catch(Exception e) {
            this.setVisible(false);
            JOptionPane.showMessageDialog(null, "No puedes dejar la fecha de fin sin seleccionar","Error", JOptionPane.WARNING_MESSAGE);
            todoCorrecto = false;
        }
        // saco fecha actual
        try {
            SimpleDateFormat formatoFecha = new SimpleDateFormat("dd-MM-yyyy");
            Date actual = new Date();
            fechaActual = formatoFecha.format(actual);
        } catch(Exception e) {
            this.setVisible(false);
            todoCorrecto = false;
        }
        this.setVisible(true);
        int IDV = (Integer.parseInt(idVenta.getText()));
        if (todoCorrecto) {
            System.out.println("TODO CORRECTO => modificar venta se va a ejecutar");
            try {
                PreparedStatement consulta;
                consulta = this.con.dameConexion().prepareStatement("UPDATE Venta SET fechaVenta = ?, fechaInicio = ?, fechaFin = ?, idCli = ?, idPaq = ? WHERE ventaID = ?");
                consulta.setString(1, fechaActual);
                consulta.setString(2, fechaInicio);
                consulta.setString(3, fechaFin);
                consulta.setInt(4, idCliente);
                consulta.setInt(5, idPaquete);
                consulta.setInt(6, IDV);
                consulta.executeUpdate();
                this.setVisible(false);
                JOptionPane.showMessageDialog(null, "La venta ha sido modificada correctamente","Venta modificada", JOptionPane.INFORMATION_MESSAGE);
                ventanaVentas.listarVentas("", "",false);
            } catch(SQLException e) {
                this.setVisible(false);
                JOptionPane.showMessageDialog(null, e.getMessage(),"Error SQL", JOptionPane.WARNING_MESSAGE);
                this.setVisible(true);
            }
        } else {
            System.out.println("No se puede modificar venta, corrige campos erróneos");
        }
        ventanaVentas.desactivarBotones();
    }//GEN-LAST:event_btnModificarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        System.out.println("Guardar nueva venta pulsado");
        boolean todoCorrecto = true;
        String fechaActual="",fechaInicio="",fechaFin="";
        int idCliente=0,idPaquete=0;
        // compruebo cliente
        if (idClienteVenta.getText().equals("")) {
            this.setVisible(false);
            textoCliente.setBorder(new LineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "No has seleccionado ningún cliente","Error", JOptionPane.WARNING_MESSAGE);
            todoCorrecto = false;
        } else {
            idCliente = Integer.parseInt(idClienteVenta.getText());
            textoCliente.setBorder(new LineBorder(Color.GREEN));
        }
        // conpruebo paquete
        if (idPaqueteVenta.getText().equals("")) {
            this.setVisible(false);
            textoPaquete.setBorder(new LineBorder(Color.RED));
            JOptionPane.showMessageDialog(null, "No has seleccionado ningún paquete","Error", JOptionPane.WARNING_MESSAGE);
            todoCorrecto = false;
        } else {
            idPaquete = Integer.parseInt(idPaqueteVenta.getText());
            textoPaquete.setBorder(new LineBorder(Color.GREEN));
        }
        // compruebo fecha inicio
        try {
            SimpleDateFormat formatoFecha = new SimpleDateFormat("dd-MM-yyyy");
            Date fechaIni = seleccionFechaInicio.getDate(); //Cojo fecha del calendario
            fechaInicio = formatoFecha.format(fechaIni);
        } catch(Exception e) {
            this.setVisible(false);
            JOptionPane.showMessageDialog(null, "No puedes dejar la fecha de inicio sin seleccionar","Error", JOptionPane.WARNING_MESSAGE);
            todoCorrecto = false;
        }
        // compruebo fecha fin
        try {
            SimpleDateFormat formatoFecha = new SimpleDateFormat("dd-MM-yyyy");
            Date fechaF = seleccionFechaFin.getDate(); //Cojo fecha del calendario
            fechaFin = formatoFecha.format(fechaF);
        } catch(Exception e) {
            this.setVisible(false);
            JOptionPane.showMessageDialog(null, "No puedes dejar la fecha de fin sin seleccionar","Error", JOptionPane.WARNING_MESSAGE);
            todoCorrecto = false;
        }
        // saco fecha actual
        try {
            SimpleDateFormat formatoFecha = new SimpleDateFormat("dd-MM-yyyy");
            Date actual = new Date();
            fechaActual = formatoFecha.format(actual);
        } catch(Exception e) {
            this.setVisible(false);
            todoCorrecto = false;
        }
        this.setVisible(true);
        if (todoCorrecto) {
            System.out.println("TODO CORRECTO => insertar venta se va a ejecutar");
            try {
                PreparedStatement consulta;
                consulta = this.con.dameConexion().prepareStatement("INSERT INTO Venta (fechaVenta,fechaInicio,fechaFin,idCli,idPaq) VALUES (?,?,?,?,?)");
                consulta.setString(1, fechaActual);
                consulta.setString(2, fechaInicio);
                consulta.setString(3, fechaFin);
                consulta.setInt(4, idCliente);
                consulta.setInt(5, idPaquete);
                consulta.executeUpdate();
                this.setVisible(false);
                JOptionPane.showMessageDialog(null, "La venta ha sido añadida correctamente","Venta realizada", JOptionPane.INFORMATION_MESSAGE);
                ventanaVentas.listarVentas("", "",false);
            } catch(SQLException e) {
                this.setVisible(false);
                JOptionPane.showMessageDialog(null, e.getMessage(),"Error SQL", JOptionPane.WARNING_MESSAGE);
                this.setVisible(true);
            }
        } else {
            System.out.println("No se puede insertar venta, corrige campos erróneos");
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void textoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoClienteActionPerformed
        
    }//GEN-LAST:event_textoClienteActionPerformed

    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
        System.out.println("Se pulsa en buscar cliente para venta");
        this.setVisible(false);
        ventanaBusqueda.darConexionAbierta(con);
        ventanaBusqueda.dameVentanaNuevaVenta(this);
        ventanaBusqueda.setAlwaysOnTop(true);
        ventanaBusqueda.cargaVentanaBusquedaCliente();
        ventanaBusqueda.setVisible(true);
    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void idClienteVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idClienteVentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idClienteVentaActionPerformed

    private void textoPaqueteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoPaqueteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textoPaqueteActionPerformed

    private void btnBuscarPaqueteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPaqueteActionPerformed
        System.out.println("Se pulsa en buscar paquete para venta");
        this.setVisible(false);
        ventanaBusqueda.darConexionAbierta(con);
        ventanaBusqueda.dameVentanaNuevaVenta(this);
        ventanaBusqueda.setAlwaysOnTop(true);
        ventanaBusqueda.cargaVentanaBusquedaPaquete();
        ventanaBusqueda.setVisible(true);
    }//GEN-LAST:event_btnBuscarPaqueteActionPerformed

    private void idPaqueteVentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idPaqueteVentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idPaqueteVentaActionPerformed
    
    /**
     * Cuando se quiere añadir una nueva venta se prepara el formulario
     * limpiando sus campos, cambiando el título del formulario y desactivando
     * la casilla del id de la venta y de cliente/paquete
     */
    public void preparaFormularioNuevaVenta() {
        System.out.println("Preparo el formulario de nueva venta");
        labelNVenta.setText("Nueva venta");
        textoCliente.setText("Selecciona un cliente...");
        textoCliente.setBorder(bordeDEF);
        textoPaquete.setText("Selecciona un paquete...");
        textoPaquete.setBorder(bordeDEF);
        seleccionFechaInicio.setDate(null);
        seleccionFechaInicio.getDateEditor().setEnabled(false);
        seleccionFechaFin.setDate(null);
        seleccionFechaFin.getDateEditor().setEnabled(false);
        btnCancelar.setEnabled(true);
        btnGuardar.setEnabled(true);
        btnModificar.setEnabled(false);
        idVenta.setVisible(false);
        idClienteVenta.setText("");
        idClienteVenta.setVisible(false);
        idPaqueteVenta.setText("");
        idPaqueteVenta.setVisible(false);
        btnBuscarCliente.requestFocus();
        btnBuscarCliente.requestFocus();
    }
    
    /**
     * Preparo el formulario para modificar una venta cargando los datos previos
     */
    public void preparaFormularioModificarVenta(int idVenta, int idCliente, int idPaquete, String nombreCliente, String nombrePaquete, String fInicio, String fFin) {
        System.out.println("Preparo el formulario para modificar una venta");
        labelNVenta.setText("Modificar venta");
        textoCliente.setText(nombreCliente);
        idClienteVenta.setText(Integer.toString(idCliente));
        textoPaquete.setText(nombrePaquete);
        idPaqueteVenta.setText(Integer.toString(idPaquete));
        Date fechaInicio = null;
        Date fechaFin = null;
        try {
            fechaInicio = new SimpleDateFormat("dd-MM-yyyy").parse(fInicio);
            fechaFin = new SimpleDateFormat("dd-MM-yyyy").parse(fFin);
        } catch (ParseException ex) {
            System.out.println("ERROR AL COGER FECHA EN MODIFICAR => "+ex.getMessage());
        }
        seleccionFechaInicio.setDate(fechaInicio);
        seleccionFechaFin.setDate(fechaFin);
        this.idVenta.setText(Integer.toString(idVenta));
        btnCancelar.setEnabled(true);
        btnModificar.setEnabled(true);
        btnGuardar.setEnabled(false);
        idClienteVenta.setVisible(false);
        idPaqueteVenta.setVisible(false);
        this.idVenta.setVisible(false);
        btnBuscarCliente.requestFocus();
    }
    
    /**
     * Pone los datos del cliente selecciona en la busqueda
     * @param nombre
     * @param id 
     */
    public void ponerDatosCliente(String nombre, int id) {
        textoCliente.setText(nombre);
        idClienteVenta.setText(Integer.toString(id));
    }
    
    /**
     * Pone los datos del cliente selecciona en la busqueda
     * @param nombre
     * @param id 
     */
    public void ponerDatosPaquete(String nombre, int id) {
        textoPaquete.setText(nombre);
        idPaqueteVenta.setText(Integer.toString(id));
    }
    
    /**
     * Me permite pasar la conexión con la base de datos entre la ventana
     * y nueva venta
     * @param con 
     */
    public void darConexionAbierta(BaseDeDatos con) {
        System.out.println("Paso la conexión BD a ventas");
        this.con = con;
    }
    
    /**
     * Paso la actual ventana de ventas abierta para poder usarla a nueva venta
     * @param ventanaVentas 
     */
    public void dameVentanaVentas(Ventas ventanaVentas) {
        System.out.println("Paso ventana ventas actual a nueva venta");
        this.ventanaVentas = ventanaVentas;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscarCliente;
    private javax.swing.JButton btnBuscarPaquete;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnModificar;
    public javax.swing.JTextField idClienteVenta;
    public javax.swing.JTextField idPaqueteVenta;
    private javax.swing.JTextField idVenta;
    private javax.swing.JLabel labelCliente;
    private javax.swing.JLabel labelFechaIFin;
    private javax.swing.JLabel labelFechaInicio;
    private javax.swing.JLabel labelNVenta;
    private javax.swing.JLabel labelPaquete;
    private com.toedter.calendar.JDateChooser seleccionFechaFin;
    private com.toedter.calendar.JDateChooser seleccionFechaInicio;
    public javax.swing.JTextField textoCliente;
    public javax.swing.JTextField textoPaquete;
    // End of variables declaration//GEN-END:variables
}
