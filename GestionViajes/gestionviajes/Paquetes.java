package gestionviajes;

import java.awt.Frame;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rubensegura
 */
public class Paquetes extends javax.swing.JDialog {

    // Declaración de variables propias
    private NuevoPaquete nuevoPaquete = new NuevoPaquete((Frame) getParent(), rootPaneCheckingEnabled);
    private BaseDeDatos con;

    /**
     * Creates new form Paquetes
     */
    public Paquetes(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setSize(918, 557);
        configuraTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenuEmergente = new javax.swing.JPopupMenu();
        jMenuItemEditar = new javax.swing.JMenuItem();
        jMenuItemEliminar = new javax.swing.JMenuItem();
        labelGPaq = new javax.swing.JLabel();
        btnPaquetesNuevo = new javax.swing.JButton();
        btnPaquetesModificar = new javax.swing.JButton();
        btnPaquetesEliminar = new javax.swing.JButton();
        btnPaquetesSalir = new javax.swing.JButton();
        comboPaquetes = new javax.swing.JComboBox<>();
        textoBusqueda = new javax.swing.JTextField();
        btnPaquetesBuscar = new javax.swing.JButton();
        jScrollPanePaquetes = new javax.swing.JScrollPane();
        jTablePaquetes = new javax.swing.JTable();

        jMenuItemEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/editar.png"))); // NOI18N
        jMenuItemEditar.setText("jMenuItem1");
        jMenuItemEditar.setToolTipText("");
        jMenuItemEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEditarActionPerformed(evt);
            }
        });
        jPopupMenuEmergente.add(jMenuItemEditar);

        jMenuItemEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eliminar.png"))); // NOI18N
        jMenuItemEliminar.setText("jMenuItem1");
        jMenuItemEliminar.setToolTipText("");
        jMenuItemEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEliminarActionPerformed(evt);
            }
        });
        jPopupMenuEmergente.add(jMenuItemEliminar);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestión de paquetes");
        setResizable(false);

        labelGPaq.setFont(new java.awt.Font("Helvetica Neue", 1, 48)); // NOI18N
        labelGPaq.setText("Paquetes");
        labelGPaq.setToolTipText("Gestión de clientes");
        labelGPaq.setPreferredSize(new java.awt.Dimension(750, 500));

        btnPaquetesNuevo.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        btnPaquetesNuevo.setMnemonic('A');
        btnPaquetesNuevo.setText("Añadir");
        btnPaquetesNuevo.setToolTipText("Añadir un nuevo paquete");
        btnPaquetesNuevo.setPreferredSize(new java.awt.Dimension(170, 80));
        btnPaquetesNuevo.setSelected(true);
        btnPaquetesNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaquetesNuevoActionPerformed(evt);
            }
        });

        btnPaquetesModificar.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        btnPaquetesModificar.setMnemonic('M');
        btnPaquetesModificar.setText("Modificar");
        btnPaquetesModificar.setToolTipText("Selecciona un paquete del listado y pulsa aquí para modificar sus datos");
        btnPaquetesModificar.setPreferredSize(new java.awt.Dimension(170, 80));
        btnPaquetesModificar.setSelected(true);
        btnPaquetesModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaquetesModificarActionPerformed(evt);
            }
        });

        btnPaquetesEliminar.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        btnPaquetesEliminar.setMnemonic('E');
        btnPaquetesEliminar.setText("Eliminar");
        btnPaquetesEliminar.setToolTipText("Selecciona un paquete del listado y pulsa aquí para eliminarlo");
        btnPaquetesEliminar.setPreferredSize(new java.awt.Dimension(170, 80));
        btnPaquetesEliminar.setSelected(true);
        btnPaquetesEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaquetesEliminarActionPerformed(evt);
            }
        });

        btnPaquetesSalir.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        btnPaquetesSalir.setMnemonic('S');
        btnPaquetesSalir.setText("Salir");
        btnPaquetesSalir.setToolTipText("Salir al menú principal de gestión de viajes");
        btnPaquetesSalir.setMinimumSize(new java.awt.Dimension(170, 33));
        btnPaquetesSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaquetesSalirActionPerformed(evt);
            }
        });

        comboPaquetes.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        comboPaquetes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "Destino", "Precio" }));
        comboPaquetes.setToolTipText("Selecciona un parámetro del combobox para realizar una búsqueda de paquetes");
        comboPaquetes.setMinimumSize(new java.awt.Dimension(500, 40));
        comboPaquetes.setPreferredSize(new java.awt.Dimension(150, 40));
        comboPaquetes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboPaquetesActionPerformed(evt);
            }
        });

        textoBusqueda.setFont(new java.awt.Font("Helvetica", 0, 12)); // NOI18N
        textoBusqueda.setText("Introduce término de búsqueda...");
        textoBusqueda.setToolTipText("Introduce término de búsqueda de paquetes aquí");
        textoBusqueda.setPreferredSize(new java.awt.Dimension(250, 40));
        textoBusqueda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                focoBuscar(evt);
            }
        });
        textoBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textoBusquedaActionPerformed(evt);
            }
        });

        btnPaquetesBuscar.setFont(new java.awt.Font("Helvetica", 0, 24)); // NOI18N
        btnPaquetesBuscar.setMnemonic('B');
        btnPaquetesBuscar.setText("Buscar por");
        btnPaquetesBuscar.setToolTipText("Pulsa para realizar una búsqueda de paquetes");
        btnPaquetesBuscar.setPreferredSize(new java.awt.Dimension(170, 40));
        btnPaquetesBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPaquetesBuscarActionPerformed(evt);
            }
        });

        jTablePaquetes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Precio", "Destino", "Hospedaje", "Duración", "Transporte"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTablePaquetes.setToolTipText("");
        jTablePaquetes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTablePaquetesMouseReleased(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                paqueteSeleccionadoEnLista(evt);
            }
        });
        jTablePaquetes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTablePaquetesKeyPressed(evt);
            }
        });
        jScrollPanePaquetes.setViewportView(jTablePaquetes);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelGPaq, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPaquetesModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPaquetesNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPaquetesEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPaquetesSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comboPaquetes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27)
                        .addComponent(textoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(btnPaquetesBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPanePaquetes))
                .addGap(30, 30, 30))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelGPaq, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPaquetesBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(textoBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(comboPaquetes, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnPaquetesNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(btnPaquetesModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(btnPaquetesEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(btnPaquetesSalir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPanePaquetes, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(30, 30, 30))
        );

        labelGPaq.getAccessibleContext().setAccessibleDescription("Gestión de paquetes");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPaquetesNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaquetesNuevoActionPerformed
        System.out.println("Voy a añadir un nuevo paquete");
        nuevoPaquete.darConexionAbierta(con);
        nuevoPaquete.dameVentanaPaquetes(this);
        nuevoPaquete.preparaFormularioNuevoPaquete();
        nuevoPaquete.setAlwaysOnTop(true);
        nuevoPaquete.setVisible(true);
    }//GEN-LAST:event_btnPaquetesNuevoActionPerformed

    private void btnPaquetesModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaquetesModificarActionPerformed
        System.out.println("Voy a modificar un paquete seleccionado");
        modificarPaquete();
    }//GEN-LAST:event_btnPaquetesModificarActionPerformed

    private void btnPaquetesEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaquetesEliminarActionPerformed
        System.out.println("Voy a eliminar un paquete seleccionado");
        eliminarPaquete();
    }//GEN-LAST:event_btnPaquetesEliminarActionPerformed

    private void btnPaquetesSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaquetesSalirActionPerformed
        System.out.println("Cierro la ventana de gestión de paquetes");
        this.setVisible(false);
    }//GEN-LAST:event_btnPaquetesSalirActionPerformed

    private void comboPaquetesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboPaquetesActionPerformed
        System.out.println("Selecciono elemento del combobox de paquetes");
        btnPaquetesBuscar.setEnabled(true);
    }//GEN-LAST:event_comboPaquetesActionPerformed

    private void textoBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textoBusquedaActionPerformed
        System.out.println("Se escribe término de búsqueda en paquetes");
    }//GEN-LAST:event_textoBusquedaActionPerformed

    private void btnPaquetesBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPaquetesBuscarActionPerformed
        String seleccionCombo = comboPaquetes.getSelectedItem().toString().toLowerCase();
        String buscar = textoBusqueda.getText();
        System.out.println("Se pulsa en buscar paquetes por " + seleccionCombo + " y " + buscar);
        listarPaquetes(seleccionCombo, buscar, true);
        btnPaquetesBuscar.setEnabled(false);
    }//GEN-LAST:event_btnPaquetesBuscarActionPerformed

    private void focoBuscar(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_focoBuscar
        textoBusqueda.setText("");
    }//GEN-LAST:event_focoBuscar

    private void paqueteSeleccionadoEnLista(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_paqueteSeleccionadoEnLista
        System.out.println("Se selecciona paquete de la lista, activo borrar y modificar");
        if (evt.getClickCount() == 2) {
            System.out.println("Dobleclick paquete de lista => abro modificar");
            modificarPaquete();
        } else if (evt.getClickCount() == 1) {
            if (evt.getButton() == 3) {
                jMenuItemEditar.setText("Editar");
                jMenuItemEditar.setIcon(new ImageIcon("src/img/editar.png"));
                jMenuItemEditar.setToolTipText("<html>Pulse para <b>editar</b> el paquete seleccionado</html>");
                jMenuItemEliminar.setToolTipText("<html>Pulse para <b>eliminar</b> el paquete seleccionado</html>");
                jMenuItemEliminar.setText("Eliminar");
                jMenuItemEliminar.setIcon(new ImageIcon("src/img/eliminar.png"));
                jPopupMenuEmergente.show(evt.getComponent(), evt.getX(), evt.getY());
            } else {
                System.out.println("Hago un click en lista de paquete");
                activarBotones();
            }
        }

    }//GEN-LAST:event_paqueteSeleccionadoEnLista

    /**
     * Modifica un cliente desde el menú emergente popup
     *
     * @param evt
     */
    private void jMenuItemEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEditarActionPerformed
        System.out.println("Menú emergente editar seleccionado");
        modificarPaquete();
    }//GEN-LAST:event_jMenuItemEditarActionPerformed

    /**
     * Borra un paquete desde el menú emergente popup
     *
     * @param evt
     */
    private void jMenuItemEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEliminarActionPerformed
        System.out.println("Menú emergente eliminar seleccionado");
        eliminarPaquete();
    }//GEN-LAST:event_jMenuItemEliminarActionPerformed

    /**
     * Devuelve la fila seleccionada al sacar el menú popup
     *
     * @param evt
     */
    private void jTablePaquetesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePaquetesMouseReleased
        int fila = this.jTablePaquetes.rowAtPoint(evt.getPoint());
        if (fila > -1) {
            this.jTablePaquetes.setRowSelectionInterval(fila, fila);
        }
    }//GEN-LAST:event_jTablePaquetesMouseReleased

    /**
     * Activa funciones modificar y borrar al pulsar ciertar teclas sobre un
     * paquete en la tabla
     *
     * @param evt
     */
    private void jTablePaquetesKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTablePaquetesKeyPressed
        System.out.println("Tecla pulsada en tabla paquetes");
        char teclaPulsada = evt.getKeyChar();
        int codigoTecla = evt.getKeyCode();
        System.out.println("Tecla: " + teclaPulsada + " | Código: " + codigoTecla);
        if (codigoTecla == 77 || codigoTecla == 10) {
            System.out.println("Moficiar paquete pulsado");
            modificarPaquete();
        } else if (codigoTecla == 8) {
            System.out.println("Eliminar paquete pulsado");
            eliminarPaquete();
        } else {
            System.out.println("No hay dunción asociada a la tecla");
        }
    }//GEN-LAST:event_jTablePaquetesKeyPressed

    /**
     * Desactiva botones innecesarios al abrir una nueva ventana de este tipo
     */
    public void desactivarBotones() {
        System.out.println("Desactivo botones de modificar, buscar y eliminar paquetes, pongo el combo sin selección");
        comboPaquetes.setSelectedIndex(-1);
        btnPaquetesModificar.setEnabled(false);
        btnPaquetesEliminar.setEnabled(false);
        btnPaquetesBuscar.setEnabled(false);
    }

    /**
     * Activar botones
     */
    private void activarBotones() {
        System.out.println("Activo borrar y modificar");
        btnPaquetesModificar.setEnabled(true);
        btnPaquetesEliminar.setEnabled(true);
    }

    /**
     * Me permite pasar la conexión con la base de datos entre la ventana
     * principal y la de paquetes
     *
     * @param con
     */
    public void darConexionAbierta(BaseDeDatos con) {
        System.out.println("Paso la conexión BD a paquetes");
        this.con = con;
    }

    /**
     * Función que modifica un paquete seleccionado en la tabla de listado de
     * paquetes
     */
    private void modificarPaquete() {
        int fila, idPaquete, precio;
        String nombre, destino, hospedaje, duracion, transporte, duracionCombo, duracionNum;
        fila = jTablePaquetes.getSelectedRow();
        System.out.println("FILA escogida => " + fila);
        idPaquete = (Integer) jTablePaquetes.getModel().getValueAt(fila, 0);
        nombre = (String) jTablePaquetes.getModel().getValueAt(fila, 1);
        precio = (Integer) jTablePaquetes.getModel().getValueAt(fila, 2);
        destino = (String) jTablePaquetes.getModel().getValueAt(fila, 3);
        hospedaje = (String) jTablePaquetes.getModel().getValueAt(fila, 4);
        duracion = (String) jTablePaquetes.getModel().getValueAt(fila, 5);
        transporte = (String) jTablePaquetes.getModel().getValueAt(fila, 6);
        // separo la duracion
        String[] partido = duracion.split(" ");
        duracionNum = partido[0];
        duracionCombo = partido[1];
        nuevoPaquete.darConexionAbierta(con);
        nuevoPaquete.dameVentanaPaquetes(this);
        nuevoPaquete.preparaFormularioModificarPaquete(idPaquete, nombre, precio, destino, hospedaje, duracionNum, duracionCombo, transporte);
        nuevoPaquete.setAlwaysOnTop(true);
        nuevoPaquete.setVisible(true);
    }

    /**
     * Función que elimina un paquete seleccionado en la tabla de listado de
     * paquetes
     */
    private void eliminarPaquete() {
        int fila = jTablePaquetes.getSelectedRow();
        int idPaquete = (Integer) jTablePaquetes.getModel().getValueAt(fila, 0);
        System.out.println("ID del paquete que vas a borrar => " + idPaquete);
        int opcion = JOptionPane.showConfirmDialog(null, "¿Realmente deseas eliminar el paquete seleccionado?", "¡Atención!", JOptionPane.YES_NO_OPTION);
        if (opcion == 0) {
            System.out.println("Se confirma la eliminación de paquete");
            PreparedStatement consulta;
            try {
                consulta = this.con.dameConexion().prepareStatement("DELETE FROM Paquete WHERE paqueteID = ?");
                consulta.setInt(1, idPaquete);
                consulta.execute();
                JOptionPane.showMessageDialog(null, "El paquete ha sido eliminado correctamente", "Paquete eliminado", JOptionPane.INFORMATION_MESSAGE);
                listarPaquetes("", "", false);
            } catch (SQLException ex) {
                System.out.println("ERROR AL BORRAR PAQUETE => " + ex.getMessage());
            }
        } else {
            System.out.println("se anula la eliminación de paquete");
        }
        desactivarBotones();
    }

    /**
     * Lista los paquetes en la tabla
     */
    public void listarPaquetes(String tipo, String busqueda, boolean esBusqueda) {
        DefaultTableModel model = (DefaultTableModel) this.jTablePaquetes.getModel();
        for (int i = model.getRowCount() - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        try {
            ResultSet rs;
            String mensaje;
            if (tipo.equals("")) {
                System.out.println("Listo todos los paquetes");
                System.out.println("Entro a hacer la consulta de todos los paquetes");
                rs = this.con.consulta.executeQuery("SELECT * FROM Paquete");
                if (rs.next()) {
                    do {
                        model.addRow(new Object[]{
                            rs.getInt("paqueteID"),
                            rs.getString("nombre"),
                            rs.getInt("precio"),
                            rs.getString("destino"),
                            rs.getString("hospedaje"),
                            rs.getString("duracion"),
                            rs.getString("transporte")
                        });
                    } while (rs.next());
                }
            } else {
                System.out.println("Listo paquetes por " + tipo + " y " + busqueda);
                PreparedStatement consulta;
                busqueda = "%" + busqueda + "%";
                consulta = this.con.dameConexion().prepareStatement("SELECT * FROM Paquete WHERE " + tipo + " LIKE ?");
                consulta.setString(1, busqueda);
                rs = consulta.executeQuery();
                if (esBusqueda && !rs.next()) {
                    mensaje = "No se han encontrado coincidencias en la búsqueda con los parámetros indicados.";
                    JOptionPane.showMessageDialog(null, mensaje, "Resultado de la búsqueda", JOptionPane.INFORMATION_MESSAGE);
                    listarPaquetes("", "", false);
                    textoBusqueda.setText("Introduce texto de búsqueda...");
                    desactivarBotones();
                } else {
                    do {
                        model.addRow(new Object[]{
                            rs.getInt("paqueteID"),
                            rs.getString("nombre"),
                            rs.getInt("precio"),
                            rs.getString("destino"),
                            rs.getString("hospedaje"),
                            rs.getString("duracion"),
                            rs.getString("transporte")
                        });
                    } while (rs.next());
                }
            }
            rs.close();
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }

    private void configuraTabla() {
        jTablePaquetes.getTableHeader().setReorderingAllowed(false);
        jTablePaquetes.setDefaultEditor(Object.class, null);
        jTablePaquetes.setToolTipText("<html>\n<b>Listado de paquetes</b> guardados en la base de datos.\n<br>"
                + "Con <b>un click</b> sobre un <b>paquete</b> se activan las funciones <b>borrar</b>"
                + " y <b>modificar</b> \n<br>"
                + "Con <b>dobleclick</b> se abre ventana modificación de paquete seleccionado. \n<br>"
                + "Pulsando <b>botón derecho</b> se abre un <b>menú emergente</b> de opciones.\n<br>"
                + "Pulsando <b>intro</b> o <b>m</b> se abre ventana modificación de paquete seleccionado.\n<br>"
                + "Pulsando <b>retroceso</b> se eliminará el paquete seleccionado.</html>");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPaquetesBuscar;
    private javax.swing.JButton btnPaquetesEliminar;
    private javax.swing.JButton btnPaquetesModificar;
    private javax.swing.JButton btnPaquetesNuevo;
    private javax.swing.JButton btnPaquetesSalir;
    private javax.swing.JComboBox<String> comboPaquetes;
    private javax.swing.JMenuItem jMenuItemEditar;
    private javax.swing.JMenuItem jMenuItemEliminar;
    private javax.swing.JPopupMenu jPopupMenuEmergente;
    private javax.swing.JScrollPane jScrollPanePaquetes;
    private javax.swing.JTable jTablePaquetes;
    private javax.swing.JLabel labelGPaq;
    private javax.swing.JTextField textoBusqueda;
    // End of variables declaration//GEN-END:variables
}
